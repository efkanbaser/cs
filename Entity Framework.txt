// ADONET SYNTAX
List<Personel> personeller = new List<Personel>();
SqlDataReader dr = new SqlDataReader();
while(dr.Read())
{
	Personel p = new Personel;
	// ...
}



// Entity Framework
NorthwindEntities entity = new NorthwindEntities();
dataGridView1.DatSource = entity.Categories.ToList();


// IQueryable
// IEnumerable
dataGridView1.DatSource = entity.Categories; // select * from Categories ------"this is an IQueryable"
dataGridView1.DatSource = entity.Categories.ToList(); // executes: select * from Categories -----"this is an IEnumerable"


Expression<Func<Category,bool>> predicate = y => y.CategoryID == 5;

// 1-LINQ Query
dataGridView1.DatSource = 	from inc in entities.Categories
							where inc.CategoryID>4
							select inc).ToList();


// 2-Extension Method
// => Lambda expression
dataGridView1.DatSource = entities.Categories.Where(x => x.CategoryID > 4).ToList();


IQueryable<Category> query = entities.Categories.Where(x => x.CategoryID > 4).OrderByDescending(x => x.CategoryID);



// INSERT TO DATABASE
NorthwindEntities ctx = new NorthwindEntities();
Product product = new Product();
product.ProductName = textBox1.Text;
product.UnitsInStock = short.Parse(textBox2.Text);
product.UnitPrice = decimal.Parse(textBox3.Text);

ctx.Products.Add(product);
ctx.SaveChanges();



Category category = ctx.Categories.Single(x => x.CategoryID == 1); 				// WORKS
Category category = ctx.Categories.Single(x => x.CategoryID > 5); 				// ERROR
Category category = ctx.Categories.SingleOrDefault(x => x.CategoryID == 999); 	// ERROR

Category category = ctx.Categories.SingleOrDefault(x => x.CategoryID == 1);  	// WORKS
Category category = ctx.Categories.SingleOrDefault(x => x.CategoryID > 5); 		// ERROR
Category category = ctx.Categories.SingleOrDefault(x => x.CategoryID == 999); 	// WORKS {doesn't explode on null values but category returns null so be aware of that}

Category category = ctx.Categories.First(x => x.CategoryID == 1);				// WORKS
Category category = ctx.Categories.First(x => x.CategoryID > 5);				// WORKS
Category category = ctx.Categories.First(x => x.CategoryID == 999);  		  	// ERROR

Category category = ctx.Categories.FirstOrDefault(x => x.CategoryID > 5);     	// WORKS
Category category = ctx.Categories.FirstOrDefault(x => x.CategoryID > 5);		// WORKS
Category category = ctx.Categories.FirstOrDefault(x => x.CategoryID > 5);		// WORKS



// Create a button, get an ID from user and give the item with that ID.
NorthwindEntities ctx = new NorthwindEntities();

int urunID = int.Parse(textBox5.Text);
ctx.Products.SingleOrDefault(x => x.ProductID == urunID);






















